{"ast":null,"code":"var _jsxFileName = \"/home/cleidir/development/projects/todo-task-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState, Fragment } from 'react';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoItems, setTodoItems] = useState(null);\n  useEffect(() => {\n    console.log(\" Hey, I've loaded up\");\n\n    if (!todoItems) {\n      fetch(\"http://localhost:8080/api/todoItems\").then(response => response.json()).then(dataTodoItems => {\n        console.log(\" Todo items list: \", dataTodoItems);\n        setTodoItems(dataTodoItems);\n      });\n    }\n  }, [todoItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoItems ? todoItems.map(todoItem => {\n      const pendingStatus = todoItem.createdDate ? \"Doing\" : \"Backlog\";\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Task: \", todoItem.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Status: \", todoItem.done ? \"Done\" : pendingStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          hidden: todoItem.createdDate,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created date: \", /*#__PURE__*/_jsxDEV(Moment, {\n              date: todoItem.createdDate,\n              format: \"DD/MM/YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 69\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          hidden: !todoItem.dueDate,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Due date: \", /*#__PURE__*/_jsxDEV(Moment, {\n              date: todoItem.dueDate,\n              format: \"DD/MM/YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 62\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          hidden: !todoItem.startDate,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Started date: \", /*#__PURE__*/_jsxDEV(Moment, {\n              date: todoItem.startDate,\n              format: \"DD/MM/YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 68\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 50\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          hidden: !todoItem.finishDate,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Finish date: \", /*#__PURE__*/_jsxDEV(Moment, {\n              date: todoItem.finishDate,\n              format: \"DD/MM/YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 51\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, todoItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    }) : \"loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZoYT4h9B5EESiSX+EMLf58IQ4bc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cleidir/development/projects/todo-task-app/src/App.js"],"names":["useEffect","useState","Fragment","Moment","App","todoItems","setTodoItems","console","log","fetch","then","response","json","dataTodoItems","map","todoItem","pendingStatus","createdDate","description","done","dueDate","startDate","finishDate","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,QAAI,CAACH,SAAL,EAAgB;AACdI,MAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,aAAD,IAAmB;AACvBN,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,aAAlC;AACAP,QAAAA,YAAY,CAACO,aAAD,CAAZ;AACD,OALH;AAMD;AACF,GAVQ,EAUN,CAACR,SAAD,CAVM,CAAT;AAWA,sBACE;AAAA,cACIA,SAAS,GAAGA,SAAS,CAACS,GAAV,CAAeC,QAAD,IAAc;AACxC,YAAMC,aAAa,GAAGD,QAAQ,CAACE,WAAT,GAAuB,OAAvB,GAAiC,SAAvD;AACA,0BACE,QAAC,QAAD;AAAA,gCACI;AAAA,iCAAM;AAAA,iCAAUF,QAAQ,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAM;AAAA,oCAAaH,QAAQ,CAACI,IAAT,GAAgB,MAAhB,GAAyBH,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,MAAM,EAAED,QAAQ,CAACE,WAAvB;AAAA,uCAAqC;AAAA,sDAAiB,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEF,QAAQ,CAACE,WAAvB;AAAoC,cAAA,MAAM,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAM,UAAA,MAAM,EAAE,CAACF,QAAQ,CAACK,OAAxB;AAAA,uCAAkC;AAAA,kDAAa,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEL,QAAQ,CAACK,OAAvB;AAAgC,cAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAM,UAAA,MAAM,EAAE,CAACL,QAAQ,CAACM,SAAxB;AAAA,kCAAmC;AAAA,uDAAkB,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEN,QAAQ,CAACM,SAAvB;AAAkC,cAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAM,UAAA,MAAM,EAAE,CAACN,QAAQ,CAACO,UAAxB;AAAA,kCAAoC;AAAA,qDAAgB,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEP,QAAQ,CAACO,UAAvB;AAAmC,cAAA,MAAM,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,SAAeP,QAAQ,CAACQ,EAAxB;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAZa,CAAH,GAYN;AAbP;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhCQnB,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState, Fragment } from 'react';\nimport Moment from 'react-moment';\n\nfunction App() {\n  const [todoItems, setTodoItems] = useState(null);\n\n  \n  useEffect(() => {\n    console.log(\" Hey, I've loaded up\");\n    if (!todoItems) {\n      fetch(\"http://localhost:8080/api/todoItems\")\n        .then((response) => response.json())\n        .then((dataTodoItems) => {\n          console.log(\" Todo items list: \", dataTodoItems);\n          setTodoItems(dataTodoItems);\n        });\n    }\n  }, [todoItems]);\n  return (\n    <div>\n      { todoItems ? todoItems.map((todoItem) => {\n        const pendingStatus = todoItem.createdDate ? \"Doing\" : \"Backlog\";\n        return (\n          <Fragment key={todoItem.id}>\n              <span><p>Task: {todoItem.description}</p></span> \n              <span><p> Status: {todoItem.done ? \"Done\" : pendingStatus}</p></span>\n              <span hidden={todoItem.createdDate}> <p>Created date: <Moment date={todoItem.createdDate} format=\"DD/MM/YYYY\"/> </p></span>\n              <span hidden={!todoItem.dueDate}> <p>Due date: <Moment date={todoItem.dueDate} format=\"DD/MM/YYYY\"/> </p> </span> \n              <span hidden={!todoItem.startDate}><p> Started date: <Moment date={todoItem.startDate} format=\"DD/MM/YYYY\"/> </p> </span> \n              <span hidden={!todoItem.finishDate}><p>Finish date: <Moment date={todoItem.finishDate} format=\"DD/MM/YYYY\"/> </p> </span> \n          </Fragment>\n          );\n      }) : \"loading data...\"}\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}